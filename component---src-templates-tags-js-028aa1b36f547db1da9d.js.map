{"version":3,"sources":["webpack:///./src/components/Hero.js","webpack:///./src/templates/tags.js","webpack:///./src/components/TagList.js","webpack:///./src/components/PostsListItem.js","webpack:///./src/components/PostsList.js"],"names":["HeroContainer","styled","div","h1","h2","Hero","props","siteCover","useSiteMetadata","fluid","useSiteImages","heroImg","src","style","backgroundImage","PageTitle","Tags","render","pageTitle","this","pageContext","tag","posts","data","edges","location","title","React","Component","ListContainer","TagListItemLink","Link","TagListItem","span","TagList","tags","noLink","map","i","key","to","length","Post","article","ReadPost","PostHeader","header","Excerpt","p","PostTitleLink","FooterLine","PostsListItem","excerpt","type","slug","language","timeToRead","hero","cover","defaultLang","publicURL","dangerouslySetInnerHTML","__html","min","aria-label","PostsList","post","node","frontmatter"],"mappings":"8FAAA,6DAKMA,EAAgBC,IAAOC,IAAG,yEAAVD,CAAU,2LAaTA,IAAOC,IAAG,0EAAVD,CAAU,4EAOfA,IAAOE,GAAE,qEAATF,CAAS,2HAQNA,IAAOG,GAAE,wEAATH,CAAS,4FAqBfI,IAfF,SAAAC,GACX,IAAQC,EAAcC,cAAdD,UACAE,EAAUC,YAAcH,GAAxBE,MACFE,EAAUL,EAAMK,SAAWF,EAAMG,IAEvC,OACE,kBAACZ,EAAa,CAACa,MAAO,CAAEC,gBAAgB,QAASH,EAAO,U,sJCnCtDI,EAAYd,IAAOE,GAAE,qEAATF,CAAS,0BAIrBe,EAAI,8DAgBP,OAhBO,6BACRC,kBACE,IAAMC,EAAS,IAAOC,KAAKb,MAAMc,YAAYC,IACvCC,EAAQH,KAAKb,MAAMiB,KAAKD,MAAME,MAEpC,OACE,kBAAC,IAAM,CAACC,SAAUN,KAAKb,MAAMmB,UAC3B,kBAAC,IAAG,CAACC,MAAK,qBAAuBP,KAAKb,MAAMc,YAAYC,MACxD,kBAAC,IAAI,CAACK,MAAOR,IAEb,kBAAC,IAAO,KACN,kBAACH,EAAS,KAAC,mBAAiBI,KAAKb,MAAMc,YAAYC,KACnD,kBAAC,IAAS,CAACC,MAAOA,OAIzB,EAhBO,CAASK,IAAMC,WAmBVZ,a,+FC7BTa,EAAgB5B,IAAOC,IAAG,4EAAVD,CAAU,sDAK1B6B,EAAkB7B,YAAO8B,QAAK,8EAAZ9B,CAAY,2LAgB9B+B,EAAc/B,IAAOgC,KAAI,0EAAXhC,CAAW,8HAWzBiC,EAAO,8DAmBV,OAnBU,6BACXjB,kBACE,MAAyBE,KAAKb,MAAtB6B,EAAI,EAAJA,KAAMC,EAAM,EAANA,OAEd,OACE,kBAACP,EAAa,KACXM,EAAKE,KAAI,SAAChB,EAAKiB,GACd,OACE,kBAAC,WAAQ,CAACC,IAAG,YAAcD,IACvBF,GACA,kBAACN,EAAe,CAACU,GAAE,SAAWnB,GAAQA,GAEvCe,GAAU,kBAACJ,EAAW,CAACQ,GAAE,SAAWnB,GAAQA,GAC5CiB,EAAIH,EAAKM,OAAS,EAAI,KAAO,SAMzC,EAnBU,CAASd,IAAMC,WAsBbM,O,yHCnDTQ,EAAOzC,IAAO0C,QAAO,yEAAd1C,CAAc,gGAMrB2C,EAAW3C,YAAO8B,QAAK,6EAAZ9B,CAAY,gRAkBvB4C,EAAa5C,IAAO6C,OAAM,+EAAb7C,CAAa,oBAI1B8C,EAAU9C,IAAO+C,EAAC,4EAAR/C,CAAQ,2DAMlBgD,EAAgBhD,YAAO8B,QAAK,kFAAZ9B,CAAY,gFAO5BiD,EAAajD,IAAOC,IAAG,+EAAVD,CAAU,sBA8CdkD,EA1CO,SAAA7C,GACpB,IAAQoB,EAAwEpB,EAAxEoB,MAAa0B,GAA2D9C,EAAjE+C,KAAiE/C,EAA3D8C,SAASE,EAAkDhD,EAAlDgD,KAAgBnB,GAAkC7B,EAA5CiD,SAA4CjD,EAAlC6B,MAAMqB,EAA4BlD,EAA5BkD,WAAYC,EAAgBnD,EAAhBmD,KAAMC,EAAUpD,EAAVoD,MAC9ClD,cAAhBmD,YAMR,OACE,kBAACjB,EAAI,KACH,kBAACG,EAAU,KACTY,GACA,yBAAK5C,MARO,CAChB,gBAAkB,SAQd,yBAAKD,IAAK6C,GAASC,GAASA,EAAME,aAIlC,4BACE,kBAACX,EAAa,CAACT,GAAE,IAAMc,GAEpB5B,KAKP,iCACE,kBAACqB,EAAO,CAACc,wBAAyB,CAAEC,OAAQV,MAG9C,gCACE,kBAACF,EAAU,KACT,kBAAC,IAAW,CAACa,IAAKP,IAClB,kBAAC,IAAI,MACL,kBAACtB,EAAA,EAAO,CAACC,KAAMA,KAEjB,kBAACS,EAAQ,CAACJ,GAAE,IAAMc,EAAQU,aAAA,QAAoBtC,EAAK,YAAY,kBC5DxDuC,IAtBG,SAAH,GAAmB,IAAb3C,EAAK,EAALA,MACXqC,EAAgBnD,cAAhBmD,YAER,OACE,kBAAC,WAAQ,KACNrC,EAAMe,KAAI,SAAA6B,GACT,IAAM5D,EAAQ,CACZoB,MAAOwC,EAAKC,KAAKC,YAAY1C,MAC7B2B,KAAMa,EAAKC,KAAKC,YAAYf,KAC5BD,QAASc,EAAKC,KAAKf,QACnBE,KAAMY,EAAKC,KAAKC,YAAYd,KAC5BE,WAAYU,EAAKC,KAAKX,WACtBD,SAAUW,EAAKC,KAAKC,YAAYb,UAAYI,EAC5CxB,KAAM+B,EAAKC,KAAKC,YAAYjC,MAAQ,GACpCsB,KAAMS,EAAKC,KAAKC,YAAYX,KAC5BC,MAAOQ,EAAKC,KAAKC,YAAYV,OAE/B,OAAO,kBAAC,EAAa,eAACnB,IAAKjC,EAAMgD,MAAUhD","file":"component---src-templates-tags-js-028aa1b36f547db1da9d.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport useSiteMetadata from '../hooks/use-site-config'\nimport useSiteImages from '../hooks/use-site-images'\n\nconst HeroContainer = styled.div`\n  position: relative;\n  display: table;\n  width: 100%;\n  height: 360px;\n  overflow: hidden;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  max-width: 770px;\n  margin: 0 auto;\n`\n\nconst TitleContainer = styled.div`\n  display: table-cell;\n  vertical-align: middle;\n  text-align: center;\n  width: 100%;\n`\n\nconst HeroTitle = styled.h1`\n  font-weight: 700;\n  font-size: 3rem;\n  margin: 10px 50px;\n  color: var(--color-white);\n  text-shadow: 1px 1px 4px rgba(34, 34, 34, 0.85);\n`\n\nconst HeroSubTitle = styled.h2`\n  margin: 10px 50px;\n  color: var(--color-white);\n  text-shadow: 1px 1px 4px rgba(34, 34, 34, 0.85);\n`\n\nconst Hero = props => {\n  const { siteCover } = useSiteMetadata()\n  const { fluid } = useSiteImages(siteCover)\n  const heroImg = props.heroImg || fluid.src\n\n  return (\n    <HeroContainer style={{ backgroundImage: `url(\"${heroImg}\")` }}>\n      {/* <TitleContainer>\n        <HeroTitle>{props.title}</HeroTitle>\n        {props.subTitle && <HeroSubTitle>{props.subTitle}</HeroSubTitle>}\n      </TitleContainer> */}\n    </HeroContainer>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport Layout from '../components/layout'\nimport PostsList from '../components/PostsList'\nimport Wrapper from '../components/Wrapper'\nimport SEO from '../components/SEO'\nimport Hero from '../components/Hero'\n\nconst PageTitle = styled.h1`\n  padding-bottom: 10px;\n`\n\nclass Tags extends React.Component {\n  render() {\n    const pageTitle = `#${this.props.pageContext.tag}`\n    const posts = this.props.data.posts.edges\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO title={`Top blog posts on ${this.props.pageContext.tag}`} />\n        <Hero title={pageTitle} />\n\n        <Wrapper>\n          <PageTitle>Posts tagged as {this.props.pageContext.tag}</PageTitle>\n          <PostsList posts={posts} />\n        </Wrapper>\n      </Layout>\n    )\n  }\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query PostsByTag($tag: String!) {\n    posts: allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: {\n          tags: { eq: $tag }\n          published: { ne: false }\n          unlisted: { ne: true }\n        }\n      }\n    ) {\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            language\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { Fragment } from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst ListContainer = styled.div`\n  display: inline;\n  color: var(--color-textSecondary);\n`\n\nconst TagListItemLink = styled(Link)`\n  text-transform: uppercase;\n  color: var(--color-textSecondary);\n\n  &:not(:first-child) {\n    margin-left: 0.3rem;\n  }\n\n  &:hover {\n    border-bottom: 1px dotted var(--color-textSecondary);\n  }\n  &:before {\n    content: '#';\n  }\n`\n\nconst TagListItem = styled.span`\n  text-transform: uppercase;\n  color: var(--color-textSecondary);\n  &:not(:first-child) {\n    margin-left: 0.3rem;\n  }\n  &:before {\n    content: '#';\n  }\n`\n\nclass TagList extends React.Component {\n  render() {\n    const { tags, noLink } = this.props\n\n    return (\n      <ListContainer>\n        {tags.map((tag, i) => {\n          return (\n            <Fragment key={`tag-list-${i}`}>\n              {!noLink && (\n                <TagListItemLink to={`/tags/${tag}`}>{tag}</TagListItemLink>\n              )}\n              {noLink && <TagListItem to={`/tags/${tag}`}>{tag}</TagListItem>}\n              {i < tags.length - 1 ? ', ' : ''}\n            </Fragment>\n          )\n        })}\n      </ListContainer>\n    )\n  }\n}\n\nexport default TagList\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport TagList from './TagList'\nimport useSiteMetadata from '../hooks/use-site-config'\nimport styled from 'styled-components'\nimport { Bull, ReadingTime } from './Commons'\n\nconst Post = styled.article`\n  border-bottom: 1px solid rgba(214, 209, 230, 0.5);\n  padding-bottom: 1.25rem;\n  margin-bottom: 1.5rem;\n`\n\nconst ReadPost = styled(Link)`\n  display: block;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  line-height: 2;\n  color: var(--color-text);\n\n  &:hover {\n    background-color: var(--color-grey600);\n    border-radius: 0.25rem;\n    color: var(--color-white);\n  }\n`\n\nconst PostHeader = styled.header`\n  padding: 1em 0;\n`\n\nconst Excerpt = styled.p`\n  line-height: 1.45;\n  padding-bottom: 0.5em;\n  color: darkgray;\n`\n\nconst PostTitleLink = styled(Link)`\n  color: var(--color-h2);\n  &:hover {\n    border-bottom: 1px dotted var(--color-text);\n  }\n`\n\nconst FooterLine = styled.div`\n  font-size: 0.8em;\n`\n\nconst PostsListItem = props => {\n  const { title, type, excerpt, slug, language, tags, timeToRead, hero, cover } = props\n  const { defaultLang } = useSiteMetadata()\n\n  const heroStyle = {\n    \"margin-bottom\" : \"25px\",\n  }\n\n  return (\n    <Post>\n      <PostHeader>\n      { hero && (\n        <div style={heroStyle}>\n        <img src={hero || (cover && cover.publicURL)} />\n      </div>\n      )} \n      \n        <h2>\n          <PostTitleLink to={`/${slug}`}>\n            {/* {defaultLang !== language && <Flag language={language} />} */}\n            {title}\n          </PostTitleLink>\n        </h2>\n      </PostHeader>\n\n      <section>\n        <Excerpt dangerouslySetInnerHTML={{ __html: excerpt }} />\n      </section>\n\n      <footer>\n        <FooterLine>\n          <ReadingTime min={timeToRead} />\n          <Bull />\n          <TagList tags={tags} />\n        </FooterLine>\n        <ReadPost to={`/${slug}`} aria-label={`View ${title} article`}>\n          Read post â€º\n        </ReadPost>\n      </footer>\n    </Post>\n  )\n}\nexport default PostsListItem\n","import React, { Fragment } from 'react'\n\nimport PostsListItem from './PostsListItem'\nimport useSiteMetadata from '../hooks/use-site-config'\n\nconst PostsList = ({ posts }) => {\n  const { defaultLang } = useSiteMetadata()\n\n  return (\n    <Fragment>\n      {posts.map(post => {\n        const props = {\n          title: post.node.frontmatter.title,\n          type: post.node.frontmatter.type,\n          excerpt: post.node.excerpt,\n          slug: post.node.frontmatter.slug,\n          timeToRead: post.node.timeToRead,\n          language: post.node.frontmatter.language || defaultLang,\n          tags: post.node.frontmatter.tags || [],\n          hero: post.node.frontmatter.hero,\n          cover: post.node.frontmatter.cover,\n        }\n        return <PostsListItem key={props.slug} {...props} />\n      })}\n    </Fragment>\n  )\n}\nexport default PostsList\n"],"sourceRoot":""}