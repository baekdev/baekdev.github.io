{"version":3,"sources":["webpack:///./src/utils.js","webpack:///./src/components/TagList.js","webpack:///./src/components/PostsListItem.js","webpack:///./src/components/PostsList.js","webpack:///./src/components/Pagination.js","webpack:///./src/templates/blog-list-template.js"],"names":["getTitlePrefix","type","isProd","window","ListContainer","styled","TagListItemLink","TagListItem","TagList","render","this","tags","noLink","key","i","to","tag","React","Component","Post","ReadPost","PostHeader","Excerpt","PostTitleLink","FooterLine","props","title","excerpt","slug","timeToRead","hero","cover","useSiteMetadata","style","src","publicURL","dangerouslySetInnerHTML","__html","min","aria-label","posts","defaultLang","post","language","PaginationWrapper","PageBtn","PreviousBtn","NextBtn","Spacer","PageInfo","currentPage","nbPages","previousUrl","className","PageTitle","PageTitleHr","BlogList","data","pageContext","location"],"mappings":"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","file":"component---src-templates-blog-list-template-js-325c3081ed6ca43d5348.js","sourcesContent":["export const getTitlePrefix = (type) => {\n    return type === \"til\" && \"[TIL] \";\n}\n\nexport const isLocal = () => {\n    return typeof window !== \"undefined\" && window.location.href.includes('localhost:8000');\n}\n\nexport const isProd = () => {\n    return !isLocal();\n}\n","import React, { Fragment } from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst ListContainer = styled.div`\n  display: inline;\n  color: var(--color-textSecondary);\n`\n\nconst TagListItemLink = styled(Link)`\n  text-transform: uppercase;\n  color: var(--color-textSecondary);\n\n  &:not(:first-child) {\n    margin-left: 0.3rem;\n  }\n\n  &:hover {\n    border-bottom: 1px dotted var(--color-textSecondary);\n  }\n  &:before {\n    content: '#';\n  }\n`\n\nconst TagListItem = styled.span`\n  text-transform: uppercase;\n  color: var(--color-textSecondary);\n  &:not(:first-child) {\n    margin-left: 0.3rem;\n  }\n  &:before {\n    content: '#';\n  }\n`\n\nclass TagList extends React.Component {\n  render() {\n    const { tags, noLink } = this.props\n\n    return (\n      <ListContainer>\n        {tags.map((tag, i) => {\n          return (\n            <Fragment key={`tag-list-${i}`}>\n              {!noLink && (\n                <TagListItemLink to={`/tags/${tag}`}>{tag}</TagListItemLink>\n              )}\n              {noLink && <TagListItem to={`/tags/${tag}`}>{tag}</TagListItem>}\n              {i < tags.length - 1 ? ', ' : ''}\n            </Fragment>\n          )\n        })}\n      </ListContainer>\n    )\n  }\n}\n\nexport default TagList\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Flag from './Flag'\nimport TagList from './TagList'\nimport useSiteMetadata from '../hooks/use-site-config'\nimport styled from 'styled-components'\nimport { Bull, ReadingTime } from './Commons'\nimport {getTitlePrefix} from \"../utils\";\n\nconst Post = styled.article`\n  border-bottom: 1px solid rgba(214, 209, 230, 0.5);\n  padding-bottom: 1.25rem;\n  margin-bottom: 1.5rem;\n`\n\nconst ReadPost = styled(Link)`\n  display: block;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  line-height: 2;\n  color: var(--color-text);\n\n  &:hover {\n    background-color: var(--color-grey600);\n    border-radius: 0.25rem;\n    color: var(--color-white);\n  }\n`\n\nconst PostHeader = styled.header`\n  padding: 1em 0;\n`\n\nconst Excerpt = styled.p`\n  line-height: 1.45;\n  padding-bottom: 0.5em;\n  color: darkgray;\n`\n\nconst PostTitleLink = styled(Link)`\n  color: var(--color-h2);\n  &:hover {\n    border-bottom: 1px dotted var(--color-text);\n  }\n`\n\nconst FooterLine = styled.div`\n  font-size: 0.8em;\n`\n\nconst PostsListItem = props => {\n  const { title, type, excerpt, slug, language, tags, timeToRead, hero, cover } = props\n  const { defaultLang } = useSiteMetadata()\n\n  const heroStyle = {\n    \"margin-bottom\" : \"25px\",\n  }\n\n  return (\n    <Post>\n      <PostHeader>\n      { hero && (\n        <div style={heroStyle}>\n        <img src={hero || (cover && cover.publicURL)} />\n      </div>\n      )} \n      \n        <h2>\n          <PostTitleLink to={`/${slug}`}>\n            {/* {defaultLang !== language && <Flag language={language} />} */}\n            {title}\n          </PostTitleLink>\n        </h2>\n      </PostHeader>\n\n      <section>\n        <Excerpt dangerouslySetInnerHTML={{ __html: excerpt }} />\n      </section>\n\n      <footer>\n        <FooterLine>\n          <ReadingTime min={timeToRead} />\n          <Bull />\n          <TagList tags={tags} />\n        </FooterLine>\n        <ReadPost to={`/${slug}`} aria-label={`View ${title} article`}>\n          Read post ›\n        </ReadPost>\n      </footer>\n    </Post>\n  )\n}\nexport default PostsListItem\n","import React, { Fragment } from 'react'\n\nimport PostsListItem from './PostsListItem'\nimport useSiteMetadata from '../hooks/use-site-config'\n\nconst PostsList = ({ posts }) => {\n  const { defaultLang } = useSiteMetadata()\n\n  return (\n    <Fragment>\n      {posts.map(post => {\n        const props = {\n          title: post.node.frontmatter.title,\n          type: post.node.frontmatter.type,\n          excerpt: post.node.excerpt,\n          slug: post.node.frontmatter.slug,\n          timeToRead: post.node.timeToRead,\n          language: post.node.frontmatter.language || defaultLang,\n          tags: post.node.frontmatter.tags || [],\n          hero: post.node.frontmatter.hero,\n          cover: post.node.frontmatter.cover,\n        }\n        return <PostsListItem key={props.slug} {...props} />\n      })}\n    </Fragment>\n  )\n}\nexport default PostsList\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst PaginationWrapper = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  margin-top: 4em;\n  justify-content: space-between;\n  width: 80%;\n  max-width: 770px;\n  padding: 25px 0;\n  margin: 0px auto;\n\n  @media (max-width: 780px) {\n    width: 90%;\n    padding: 25px 0;\n  }\n`\n\nconst PageBtn = styled(Link)`\n  border-radius: 3px;\n  background-color: var(--color-primary);\n  border: 1px solid var(--color-primary);\n  color: var(--color-white);\n  padding: 8px 20px;\n  min-width: 130px;\n\n  &:hover {\n    background-color: var(--color-white);\n    color: var(--color-primary);\n    border: 1px solid var(--color-primary);\n  }\n\n  @media (max-width: 564px) {\n    margin-top: 10px;\n    width: 100%;\n  }\n`\n\nconst PreviousBtn = styled(PageBtn)`\n  order: 1;\n  @media (max-width: 564px) {\n    order: 2;\n  }\n`\n\nconst NextBtn = styled(PageBtn)`\n  order: 3;\n`\n\nconst Spacer = styled.span`\n  display: block;\n  min-width: 130px;\n\n  &.previous {\n    order: 1;\n  }\n\n  &.next {\n    order: 3;\n  }\n\n  @media (max-width: 564px) {\n    display: none;\n\n    &.previous {\n      order: 2;\n    }\n\n    &.next {\n      order: 3;\n    }\n  }\n`\n\nconst PageInfo = styled.span`\n  order: 2;\n  padding: 1em 0;\n  @media (max-width: 564px) {\n    order: 1;\n  }\n`\n\nclass Pagination extends React.Component {\n  render() {\n    const { currentPage, nbPages } = this.props\n    const previousUrl = currentPage === 2 ? '/' : `/pages/${currentPage - 1}`\n\n    return (\n      <PaginationWrapper>\n        {currentPage !== 1 ? (\n          <PreviousBtn to={previousUrl}>‹ Newer posts</PreviousBtn>\n        ) : (\n          <Spacer className=\"previous\" />\n        )}\n\n        <PageInfo>\n          Page {currentPage} of {nbPages}\n        </PageInfo>\n\n        {currentPage < nbPages ? (\n          <NextBtn to={`/pages/${currentPage + 1}`}>Older posts ›</NextBtn>\n        ) : (\n          <Spacer className=\"next\" />\n        )}\n      </PaginationWrapper>\n    )\n  }\n}\n\nexport default Pagination\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Wrapper from '../components/Wrapper'\nimport PostsList from '../components/PostsList'\nimport Pagination from '../components/Pagination'\nimport SEO from '../components/SEO'\nimport styled from 'styled-components'\n\nexport const PageTitle = styled.h2`\n`\nexport const PageTitleHr = styled.hr`\n  margin: 20px 0 10px 0;\n`\n\nclass BlogList extends React.Component {\n  render() {\n    const posts = this.props.data.posts.edges\n    const { pageContext } = this.props\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO />\n        {/* <HeroMain title={title} subTitle={description} /> */}\n        <Wrapper>\n          <PageTitle>All Posts</PageTitle>\n          <PageTitleHr/>\n          <PostsList posts={posts} />\n        </Wrapper>\n\n        <Pagination\n          nbPages={pageContext.nbPages}\n          currentPage={pageContext.currentPage}\n        />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogList\n\nexport const pageQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    posts: allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fileAbsolutePath: {regex: \"/content/posts/|/content/til/\"}\n        frontmatter: { published: { ne: false }, unlisted: { ne: true } }\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            type\n            tags\n            language\n            slug\n            hero\n            cover {\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}