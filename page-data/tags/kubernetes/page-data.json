{"componentChunkName":"component---src-templates-tags-js","path":"/tags/kubernetes","result":{"data":{"posts":{"edges":[{"node":{"excerpt":"쿠버네티스 컨트롤러는 Auto Healing, Auto Scaling, Software Update, Job 등의 주요 기능을 갖고 있습니다. 그 중에서 디플로이먼트에 대해 살펴보도록 하겠습니다. ","timeToRead":1,"frontmatter":{"title":"쿠버네티스 Controller 살펴보기1 Deployment - 기초(4)","tags":["kubernetes","container","orchestration"],"language":null,"slug":"post/9/"}}},{"node":{"excerpt":"개발시 테스트 하는 dev server와 실제 서비스를 운영하는 production server는 각각 환경 설정이 다를 수 있다. 외부로부터 전달받도록 사용하는 쿠버네티스 오브젝트가 바로 ConfigMap과 Sercret이다. 그리고 자원에 대한 분리 및 제한을 관할하는 오브젝트 Namespace, ResourceQuota, LimitRanger에 대해 살펴보자.","timeToRead":1,"frontmatter":{"title":"쿠버네티스 Object 살펴보기2 ConfigMap, Secret, Namespace, ResourceQuota, LimitRanger - 기초(3)","tags":["kubernetes","container","orchestration"],"language":null,"slug":"post/8/"}}},{"node":{"excerpt":"이전 포스팅에서는 쿠버네티스가 무엇인지 간략하게 살펴보았습니다. 쿠버네티스는 시스템의 상태를 나타내는 오브젝트(Object)라는 영구 엔티티라는 개념이 있습니다. 오브젝트는 의도를 담은 레코드로, 객체가 존재하도록 지속적으로 작동하게 됩니다. 오브젝트를 사용, 생성, 수정 또는 삭제하기 위해서 Kubernetes API를 사용하게 됩니다. 이번에는 Pod, Service, Volume에 대해 살펴보도록 하겠습니다.","timeToRead":3,"frontmatter":{"title":"쿠버네티스 Object 살펴보기1 Pod/Service/Volume - 기초(2)","tags":["kubernetes","container","orchestration"],"language":null,"slug":"post/6/"}}},{"node":{"excerpt":"우리나라에서도 많은 IT 기업들이 점차 쿠버네티스 도입을 시작하였습니다. 쿠버네티스가 무엇이고 왜 도래하게 되었는지 살펴보도록 하겠습니다. 쿠버네티스 기초편은 총 4개의 시리즈 구성될 예정입니다.","timeToRead":2,"frontmatter":{"title":"쿠버네티스란 무엇인지 살펴보기 - 기초(1)","tags":["kubernetes","container","orchestration"],"language":null,"slug":"post/5/"}}},{"node":{"excerpt":"기간제 목표형 모각코가 퀵퀵각코로 새롭게 시작합니다. 단기속성 4주완성 모각코를 하면서 제가 세운 쿠버네티스 기초 정복을 목표로 매주 개발 일지를 회고록 형태로 남깁니다. 총 4회 모임까지의 회고록입니다.","timeToRead":3,"frontmatter":{"title":"쿠버네티스 - 퀵퀵각코 회고록","tags":["kubernetes","mogaco","quickquickgaco"],"language":null,"slug":"post/3/"}}}]}},"pageContext":{"tag":"kubernetes"}},"staticQueryHashes":["1956263691","2749999020"]}