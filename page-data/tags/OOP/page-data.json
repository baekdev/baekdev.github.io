{"componentChunkName":"component---src-templates-tags-js","path":"/tags/OOP","result":{"data":{"posts":{"edges":[{"node":{"excerpt":"객체지향 애플리케이션의 중심 사상은 연쇄적으로 메시지를 전송하고 수신하는 객체들 사이의 협력 관계를 기반으로 사용자에게 유용한 기능을 제공하는 것이다. 클래스 기반의 객체지향 언어를 사용하는 대부분의 사람들은 객체지향 애플리케이션을 클래스의 집합으로 생각한다. 프로그래머 입장에서는 클래스는 실제로 볼 수 있고 수정할 수 있는 구체적인 존재다. 대부분의 입문자들은 클래스 간의 상속 관계가 객체지향 설계를 가치 있게 만드는 핵심적인 매커니즘이라고 배운다. 하지만 객체지향의 강력함은 클래스가 아니라 객체들이 주고받는 메시지로부터 나온다. 객체지향의 애플리케이션은 클래스를 이용해 만들어지지만 메시지를 통해 정의된다.","timeToRead":5,"frontmatter":{"title":"객체지향을 한 단어로 설명한다면 그것은 클래스가 아니라 메시지이다","tags":["OOP"],"language":null,"slug":"post/22/"}}}]}},"pageContext":{"tag":"OOP"}},"staticQueryHashes":["1956263691","2749999020"]}