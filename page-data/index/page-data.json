{"componentChunkName":"component---src-templates-blog-list-template-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"아웃풋 트레이닝","description":"Frontend Software Engineer"}},"posts":{"edges":[{"node":{"excerpt":"Array.prototype.reduce를 이용한 방식과 Promise.all/Promise.allSettled 방식은 프로미스 처리에 있어 중요한 차이점을 가지고 있다. 어떤 방식을 선택할지 결정하기 전에 각 방식의 특성을 이해하고 사용 사례를 고려해야 한다.","timeToRead":2,"frontmatter":{"title":"Promise를 이용한 비동기 순차 처리와 병렬 처리 핸들하기","type":null,"tags":["javascript","promise"],"language":null,"slug":"post/48/","hero":"/assets/images/basic/001.png","cover":null}}},{"node":{"excerpt":"Yarn PnP를 적용하여 개발중인 프로젝트에서 eslint 적용하려고 하니 다음과 같은 오류가 발생했다.  원인 Yarn PnP는 기존 npm을 이용한 패키지와 종속성 관리 방식이 다르기 때문이다. PnP(Plug'n'Play…","timeToRead":1,"frontmatter":{"title":"Yarn PnP 사용시 IntelliJ에서 ESLint 적용하기","type":null,"tags":["yarn","yarn pnp","eslint"],"language":null,"slug":"post/47/","hero":"/assets/images/post/2023/2023_047_000.png","cover":null}}},{"node":{"excerpt":"개발자에게 커뮤니케이션 스킬은 옵션인줄 알았는데, 필수불가결이었다. 서로 다른 직군의 개발자이지만, 같은 개발자끼리도 커뮤니케이션이 왜 쉽지 않은지 소개하고 싶다.","timeToRead":3,"frontmatter":{"title":"백엔드 개발자에게 원하는 걸 말했는데, 왜 대화가 안될까?","type":null,"tags":["소프트스킬","커뮤니케이션"],"language":null,"slug":"post/46/","hero":"/assets/images/basic/luffy_cry.gif","cover":null}}},{"node":{"excerpt":"타입스크립트 예약어 중에 식별자(변수명, 함수명 등)로 사용할 수 있는 예약어가 있다? 어떤 차이점이 있는지 자세히 알아보자.","timeToRead":1,"frontmatter":{"title":"타입스크립트 예약어 중에 식별자(변수명, 함수명 등)로 사용할 수 있는 예약어가 있다?","type":null,"tags":["typescript"],"language":null,"slug":"post/45/","hero":"/assets/images/post/2023/2023_045_000.png","cover":null}}},{"node":{"excerpt":"글 쓰는 것이 왜 어려울까 고민했을 때 내 기준에서 가장 큰 요인은 '무엇을 쓸 것인가, 글감의 부재'였다. 낱개로 흩어지는 메모를 유기적으로 연결하고 싶은 니즈는 온전히 사람의 손으로만 이루어져야 하는 것인가에 대한 고민들도 한 몫했다.","timeToRead":2,"frontmatter":{"title":"다시 쓰는 글쓰기 with 제텔카스텐","type":null,"tags":["diary"],"language":null,"slug":"post/44/","hero":"/assets/images/post/2023/2023_044_000.png","cover":null}}},{"node":{"excerpt":"Callback 보다는 Promise가 코드 작성하기 쉽고, 타입 추론하기가 쉽다.","timeToRead":1,"frontmatter":{"title":"이펙티브 타입스크립트 - 6. 비동기 코드에는 콜백 대신 async 함수 사용하기","type":"til","tags":["frontend","typescript","book"],"language":null,"slug":"til/typescript/effective-typescript/ch03/item25","hero":"/assets/images/til/book-effective-typescript.png","cover":null}}},{"node":{"excerpt":"타입 스크립트가 타입을 추론할 수 있다면 타입 구문을 작성하지 않는게 좋다.","timeToRead":1,"frontmatter":{"title":"이펙티브 타입스크립트 - 5. 추론 가능한 타입을 사용해 장황한 코드 방지하기","type":"til","tags":["frontend","typescript","book"],"language":null,"slug":"til/typescript/effective-typescript/ch03/item19","hero":"/assets/images/til/book-effective-typescript.png","cover":null}}},{"node":{"excerpt":"타입과 인터페이스의 차이점과 비슷한 점 이해하고, 타입과 인터페이스를 선택해야하는 상황 살펴보기","timeToRead":1,"frontmatter":{"title":"이펙티브 타입스크립트 - 4. 타입과 인터페이스 차이점 알기","type":"til","tags":["frontend","typescript","book"],"language":null,"slug":"til/typescript/effective-typescript/ch02/item13","hero":"/assets/images/til/book-effective-typescript.png","cover":null}}},{"node":{"excerpt":"타입 단언, 타입 선언, 객체 래퍼 타입, 자바스크립트 7가지 기본형 값들, 함수 표현식에 타입 적용하기","timeToRead":3,"frontmatter":{"title":"이펙티브 타입스크립트 - 3. 타입 단언(as Type)보다는 타입 선언(: Type)을 사용하기 등","type":"til","tags":["frontend","typescript","book"],"language":null,"slug":"til/typescript/effective-typescript/ch02/item9","hero":"/assets/images/til/book-effective-typescript.png","cover":null}}},{"node":{"excerpt":"선형 탐색, 이진 탐색, 이진 탐색 트리","timeToRead":1,"frontmatter":{"title":"알고리즘 - 선형 탐색 vs 이진 탐색","type":"til","tags":["algorithm","binary search","data structure"],"language":null,"slug":"til/algorithm/binary-search","hero":"/assets/images/basic/001.png","cover":null}}}]}},"pageContext":{"limit":10,"skip":0,"currentPage":1,"nbPages":6}},"staticQueryHashes":["1956263691","2749999020"]}