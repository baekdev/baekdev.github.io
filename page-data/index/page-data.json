{"componentChunkName":"component---src-templates-blog-list-template-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"아웃풋 트레이닝","description":"Frontend Software Engineer"}},"posts":{"edges":[{"node":{"excerpt":"글 쓰는 것이 왜 어려울까 고민했을 때 내 기준에서 가장 큰 요인은 '무엇을 쓸 것인가, 글감의 부재'였다. 낱개로 흩어지는 메모를 유기적으로 연결하고 싶은 니즈는 온전히 사람의 손으로만 이루어져야 하는 것인가에 대한 고민들도 한 몫했다.","timeToRead":2,"frontmatter":{"title":"다시 쓰는 글쓰기 with 제텔카스텐","type":null,"tags":["diary"],"language":null,"slug":"post/44/","hero":"/assets/images/post/2023/2023_044_000.png","cover":null}}},{"node":{"excerpt":"글 쓰는 것이 왜 어려울까 고민했을 때 내 기준에서 가장 큰 요인은 '무엇을 쓸 것인가, 글감의 부재'였다. 낱개로 흩어지는 메모를 유기적으로 연결하고 싶은 니즈는 온전히 사람의 손으로만 이루어져야 하는 것인가에 대한 고민들도 한 몫했다.","timeToRead":2,"frontmatter":{"title":"다시 쓰는 글쓰기 with 제텔카스텐","type":null,"tags":["diary"],"language":null,"slug":"post/44/","hero":"/assets/images/post/2023/2023_044_000.png","cover":null}}},{"node":{"excerpt":"Callback 보다는 Promise가 코드 작성하기 쉽고, 타입 추론하기가 쉽다.","timeToRead":1,"frontmatter":{"title":"이펙티브 타입스크립트 - 6. 비동기 코드에는 콜백 대신 async 함수 사용하기","type":"til","tags":["frontend","typescript","book"],"language":null,"slug":"til/typescript/effective-typescript/ch03/item25","hero":"/assets/images/til/book-effective-typescript.png","cover":null}}},{"node":{"excerpt":"타입 스크립트가 타입을 추론할 수 있다면 타입 구문을 작성하지 않는게 좋다.","timeToRead":1,"frontmatter":{"title":"이펙티브 타입스크립트 - 5. 추론 가능한 타입을 사용해 장황한 코드 방지하기","type":"til","tags":["frontend","typescript","book"],"language":null,"slug":"til/typescript/effective-typescript/ch03/item19","hero":"/assets/images/til/book-effective-typescript.png","cover":null}}},{"node":{"excerpt":"타입과 인터페이스의 차이점과 비슷한 점 이해하고, 타입과 인터페이스를 선택해야하는 상황 살펴보기","timeToRead":1,"frontmatter":{"title":"이펙티브 타입스크립트 - 4. 타입과 인터페이스 차이점 알기","type":"til","tags":["frontend","typescript","book"],"language":null,"slug":"til/typescript/effective-typescript/ch02/item13","hero":"/assets/images/til/book-effective-typescript.png","cover":null}}},{"node":{"excerpt":"타입 단언, 타입 선언, 객체 래퍼 타입, 자바스크립트 7가지 기본형 값들, 함수 표현식에 타입 적용하기","timeToRead":3,"frontmatter":{"title":"이펙티브 타입스크립트 - 3. 타입 단언(as Type)보다는 타입 선언(: Type)을 사용하기 등","type":"til","tags":["frontend","typescript","book"],"language":null,"slug":"til/typescript/effective-typescript/ch02/item9","hero":"/assets/images/til/book-effective-typescript.png","cover":null}}},{"node":{"excerpt":"선형 탐색, 이진 탐색, 이진 탐색 트리","timeToRead":1,"frontmatter":{"title":"알고리즘 - 선형 탐색 vs 이진 탐색","type":"til","tags":["algorithm","binary search","data structure"],"language":null,"slug":"til/algorithm/binary-search","hero":"/assets/images/basic/001.png","cover":null}}},{"node":{"excerpt":"트라이의 개념, 장단점, 트라이 구조, 트라이 구현","timeToRead":1,"frontmatter":{"title":"자료구조 - 트라이(Trie)","type":"til","tags":["data structure"],"language":null,"slug":"til/data-structure/trie","hero":"/assets/images/basic/001.png","cover":null}}},{"node":{"excerpt":"Literal Type, 타입 체커, 유니온 타입, 서브타입, 타입 공간, 값 공간의 심벌 구분, typeof, instanceof, 타입 단언, 타입 선언, 객체 래퍼 타입, 자바스크립트 7가지 기본형 값들","timeToRead":1,"frontmatter":{"title":"이펙티브 타입스크립트 - 2. 타입 공간과 값 공간의 심벌 구분하기 등","type":"til","tags":["frontend","typescript","book"],"language":null,"slug":"til/typescript/effective-typescript/ch02","hero":"/assets/images/til/book-effective-typescript.png","cover":null}}},{"node":{"excerpt":"typescript 설정 이해, 런타임에 타입 정보를 유지하는 방법, 구조적 타이핑, any 타입","timeToRead":2,"frontmatter":{"title":"이펙티브 타입스크립트 - 1. 타입스크립트 알아보기","type":"til","tags":["frontend","typescript","book"],"language":null,"slug":"til/typescript/effective-typescript/ch01","hero":"/assets/images/til/book-effective-typescript.png","cover":null}}}]}},"pageContext":{"limit":10,"skip":0,"currentPage":1,"nbPages":5}},"staticQueryHashes":["1956263691","2749999020"]}