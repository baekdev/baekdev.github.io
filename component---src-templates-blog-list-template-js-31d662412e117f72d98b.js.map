{"version":3,"sources":["webpack:///./src/components/TagList.js","webpack:///./src/components/PostsListItem.js","webpack:///./src/components/PostsList.js","webpack:///./src/components/Pagination.js","webpack:///./src/templates/blog-list-template.js"],"names":["ListContainer","styled","div","withConfig","displayName","componentId","TagListItemLink","Link","TagListItem","span","TagList","_React$Component","apply","arguments","_inheritsLoose","prototype","render","_this$props","this","props","tags","noLink","React","createElement","map","tag","i","Fragment","key","to","length","Component","Post","article","ReadPost","PostHeader","header","Excerpt","p","PostTitleLink","FooterLine","PostsListItem","title","excerpt","type","slug","language","timeToRead","hero","cover","useSiteMetadata","defaultLang","style","src","publicURL","dangerouslySetInnerHTML","__html","ReadingTime","min","Bull","aria-label","PostsList","_ref","posts","post","node","frontmatter","Object","assign","PaginationWrapper","nav","PageBtn","PreviousBtn","NextBtn","Spacer","PageInfo","Pagination","currentPage","nbPages","previousUrl","className","PageTitle","h2","PageTitleHr","hr","BlogList","data","edges","pageContext","Layout","location","SEO","Wrapper"],"mappings":"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","file":"component---src-templates-blog-list-template-js-31d662412e117f72d98b.js","sourcesContent":["import React, { Fragment } from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst ListContainer = styled.div`\n  display: inline;\n  color: var(--color-textSecondary);\n`\n\nconst TagListItemLink = styled(Link)`\n  text-transform: uppercase;\n  color: var(--color-textSecondary);\n\n  &:not(:first-child) {\n    margin-left: 0.3rem;\n  }\n\n  &:hover {\n    border-bottom: 1px dotted var(--color-textSecondary);\n  }\n  &:before {\n    content: '#';\n  }\n`\n\nconst TagListItem = styled.span`\n  text-transform: uppercase;\n  color: var(--color-textSecondary);\n  &:not(:first-child) {\n    margin-left: 0.3rem;\n  }\n  &:before {\n    content: '#';\n  }\n`\n\nclass TagList extends React.Component {\n  render() {\n    const { tags, noLink } = this.props\n\n    return (\n      <ListContainer>\n        {tags.map((tag, i) => {\n          return (\n            <Fragment key={`tag-list-${i}`}>\n              {!noLink && (\n                <TagListItemLink to={`/tags/${tag}`}>{tag}</TagListItemLink>\n              )}\n              {noLink && <TagListItem to={`/tags/${tag}`}>{tag}</TagListItem>}\n              {i < tags.length - 1 ? ', ' : ''}\n            </Fragment>\n          )\n        })}\n      </ListContainer>\n    )\n  }\n}\n\nexport default TagList\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport TagList from './TagList'\nimport useSiteMetadata from '../hooks/use-site-config'\nimport styled from 'styled-components'\nimport { Bull, ReadingTime } from './Commons'\n\nconst Post = styled.article`\n  border-bottom: 1px solid rgba(214, 209, 230, 0.5);\n  padding-bottom: 1.25rem;\n  margin-bottom: 1.5rem;\n`\n\nconst ReadPost = styled(Link)`\n  display: block;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  line-height: 2;\n  color: var(--color-text);\n\n  &:hover {\n    background-color: var(--color-grey600);\n    border-radius: 0.25rem;\n    color: var(--color-white);\n  }\n`\n\nconst PostHeader = styled.header`\n  padding: 1em 0;\n`\n\nconst Excerpt = styled.p`\n  line-height: 1.45;\n  padding-bottom: 0.5em;\n  color: darkgray;\n`\n\nconst PostTitleLink = styled(Link)`\n  color: var(--color-h2);\n  &:hover {\n    border-bottom: 1px dotted var(--color-text);\n  }\n`\n\nconst FooterLine = styled.div`\n  font-size: 0.8em;\n`\n\nconst PostsListItem = props => {\n  const { title, type, excerpt, slug, language, tags, timeToRead, hero, cover } = props\n  const { defaultLang } = useSiteMetadata()\n\n  const heroStyle = {\n    \"margin-bottom\" : \"25px\",\n  }\n\n  return (\n    <Post>\n      <PostHeader>\n      { hero && (\n        <div style={heroStyle}>\n        <img src={hero || (cover && cover.publicURL)} />\n      </div>\n      )} \n      \n        <h2>\n          <PostTitleLink to={`/${slug}`}>\n            {/* {defaultLang !== language && <Flag language={language} />} */}\n            {title}\n          </PostTitleLink>\n        </h2>\n      </PostHeader>\n\n      <section>\n        <Excerpt dangerouslySetInnerHTML={{ __html: excerpt }} />\n      </section>\n\n      <footer>\n        <FooterLine>\n          <ReadingTime min={timeToRead} />\n          <Bull />\n          <TagList tags={tags} />\n        </FooterLine>\n        <ReadPost to={`/${slug}`} aria-label={`View ${title} article`}>\n          Read post â€º\n        </ReadPost>\n      </footer>\n    </Post>\n  )\n}\nexport default PostsListItem\n","import React, { Fragment } from 'react'\n\nimport PostsListItem from './PostsListItem'\nimport useSiteMetadata from '../hooks/use-site-config'\n\nconst PostsList = ({ posts }) => {\n  const { defaultLang } = useSiteMetadata()\n\n  return (\n    <Fragment>\n      {posts.map(post => {\n        const props = {\n          title: post.node.frontmatter.title,\n          type: post.node.frontmatter.type,\n          excerpt: post.node.excerpt,\n          slug: post.node.frontmatter.slug,\n          timeToRead: post.node.timeToRead,\n          language: post.node.frontmatter.language || defaultLang,\n          tags: post.node.frontmatter.tags || [],\n          hero: post.node.frontmatter.hero,\n          cover: post.node.frontmatter.cover,\n        }\n        return <PostsListItem key={props.slug} {...props} />\n      })}\n    </Fragment>\n  )\n}\nexport default PostsList\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst PaginationWrapper = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  margin-top: 4em;\n  justify-content: space-between;\n  width: 80%;\n  max-width: 770px;\n  padding: 25px 0;\n  margin: 0px auto;\n\n  @media (max-width: 780px) {\n    width: 90%;\n    padding: 25px 0;\n  }\n`\n\nconst PageBtn = styled(Link)`\n  border-radius: 3px;\n  background-color: var(--color-primary);\n  border: 1px solid var(--color-primary);\n  color: var(--color-white);\n  padding: 8px 20px;\n  min-width: 130px;\n\n  &:hover {\n    background-color: var(--color-white);\n    color: var(--color-primary);\n    border: 1px solid var(--color-primary);\n  }\n\n  @media (max-width: 564px) {\n    margin-top: 10px;\n    width: 100%;\n  }\n`\n\nconst PreviousBtn = styled(PageBtn)`\n  order: 1;\n  @media (max-width: 564px) {\n    order: 2;\n  }\n`\n\nconst NextBtn = styled(PageBtn)`\n  order: 3;\n`\n\nconst Spacer = styled.span`\n  display: block;\n  min-width: 130px;\n\n  &.previous {\n    order: 1;\n  }\n\n  &.next {\n    order: 3;\n  }\n\n  @media (max-width: 564px) {\n    display: none;\n\n    &.previous {\n      order: 2;\n    }\n\n    &.next {\n      order: 3;\n    }\n  }\n`\n\nconst PageInfo = styled.span`\n  order: 2;\n  padding: 1em 0;\n  @media (max-width: 564px) {\n    order: 1;\n  }\n`\n\nclass Pagination extends React.Component {\n  render() {\n    const { currentPage, nbPages } = this.props\n    const previousUrl = currentPage === 2 ? '/' : `/pages/${currentPage - 1}`\n\n    return (\n      <PaginationWrapper>\n        {currentPage !== 1 ? (\n          <PreviousBtn to={previousUrl}>â€¹ Newer posts</PreviousBtn>\n        ) : (\n          <Spacer className=\"previous\" />\n        )}\n\n        <PageInfo>\n          Page {currentPage} of {nbPages}\n        </PageInfo>\n\n        {currentPage < nbPages ? (\n          <NextBtn to={`/pages/${currentPage + 1}`}>Older posts â€º</NextBtn>\n        ) : (\n          <Spacer className=\"next\" />\n        )}\n      </PaginationWrapper>\n    )\n  }\n}\n\nexport default Pagination\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Wrapper from '../components/Wrapper'\nimport PostsList from '../components/PostsList'\nimport Pagination from '../components/Pagination'\nimport SEO from '../components/SEO'\nimport styled from 'styled-components'\n\nexport const PageTitle = styled.h2`\n`\nexport const PageTitleHr = styled.hr`\n  margin: 20px 0 10px 0;\n`\n\nclass BlogList extends React.Component {\n  render() {\n    const posts = this.props.data.posts.edges\n    const { pageContext } = this.props\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO />\n        {/* <HeroMain title={title} subTitle={description} /> */}\n        <Wrapper>\n          <PageTitle>All Posts</PageTitle>\n          <PageTitleHr/>\n          <PostsList posts={posts} />\n        </Wrapper>\n\n        <Pagination\n          nbPages={pageContext.nbPages}\n          currentPage={pageContext.currentPage}\n        />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogList\n\nexport const pageQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    posts: allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fileAbsolutePath: {regex: \"/content/posts/|/content/til/\"}\n        frontmatter: { published: { ne: false }, unlisted: { ne: true } }\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            type\n            tags\n            language\n            slug\n            hero\n            cover {\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}