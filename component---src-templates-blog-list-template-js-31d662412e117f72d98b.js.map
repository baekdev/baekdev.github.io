{"version":3,"sources":["webpack:///./src/components/TagList.js","webpack:///./src/components/PostsListItem.js","webpack:///./src/components/PostsList.js","webpack:///./src/components/Pagination.js","webpack:///./src/templates/blog-list-template.js"],"names":["ListContainer","styled","div","TagListItemLink","Link","TagListItem","span","TagList","render","this","props","tags","noLink","map","tag","i","key","to","length","React","Component","Post","article","ReadPost","PostHeader","header","Excerpt","p","PostTitleLink","FooterLine","PostsListItem","title","excerpt","type","slug","language","timeToRead","hero","cover","useSiteMetadata","defaultLang","style","src","publicURL","dangerouslySetInnerHTML","__html","min","aria-label","PostsList","posts","post","node","frontmatter","PaginationWrapper","nav","PageBtn","PreviousBtn","NextBtn","Spacer","PageInfo","Pagination","currentPage","nbPages","previousUrl","className","PageTitle","h2","PageTitleHr","hr","BlogList","data","edges","pageContext","location","SEO","Wrapper"],"mappings":"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","file":"component---src-templates-blog-list-template-js-31d662412e117f72d98b.js","sourcesContent":["import React, { Fragment } from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst ListContainer = styled.div`\n  display: inline;\n  color: var(--color-textSecondary);\n`\n\nconst TagListItemLink = styled(Link)`\n  text-transform: uppercase;\n  color: var(--color-textSecondary);\n\n  &:not(:first-child) {\n    margin-left: 0.3rem;\n  }\n\n  &:hover {\n    border-bottom: 1px dotted var(--color-textSecondary);\n  }\n  &:before {\n    content: '#';\n  }\n`\n\nconst TagListItem = styled.span`\n  text-transform: uppercase;\n  color: var(--color-textSecondary);\n  &:not(:first-child) {\n    margin-left: 0.3rem;\n  }\n  &:before {\n    content: '#';\n  }\n`\n\nclass TagList extends React.Component {\n  render() {\n    const { tags, noLink } = this.props\n\n    return (\n      <ListContainer>\n        {tags.map((tag, i) => {\n          return (\n            <Fragment key={`tag-list-${i}`}>\n              {!noLink && (\n                <TagListItemLink to={`/tags/${tag}`}>{tag}</TagListItemLink>\n              )}\n              {noLink && <TagListItem to={`/tags/${tag}`}>{tag}</TagListItem>}\n              {i < tags.length - 1 ? ', ' : ''}\n            </Fragment>\n          )\n        })}\n      </ListContainer>\n    )\n  }\n}\n\nexport default TagList\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport TagList from './TagList'\nimport useSiteMetadata from '../hooks/use-site-config'\nimport styled from 'styled-components'\nimport { Bull, ReadingTime } from './Commons'\n\nconst Post = styled.article`\n  border-bottom: 1px solid rgba(214, 209, 230, 0.5);\n  padding-bottom: 1.25rem;\n  margin-bottom: 1.5rem;\n`\n\nconst ReadPost = styled(Link)`\n  display: block;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  line-height: 2;\n  color: var(--color-text);\n\n  &:hover {\n    background-color: var(--color-grey600);\n    border-radius: 0.25rem;\n    color: var(--color-white);\n  }\n`\n\nconst PostHeader = styled.header`\n  padding: 1em 0;\n`\n\nconst Excerpt = styled.p`\n  line-height: 1.45;\n  padding-bottom: 0.5em;\n  color: darkgray;\n`\n\nconst PostTitleLink = styled(Link)`\n  color: var(--color-h2);\n  &:hover {\n    border-bottom: 1px dotted var(--color-text);\n  }\n`\n\nconst FooterLine = styled.div`\n  font-size: 0.8em;\n`\n\nconst PostsListItem = props => {\n  const { title, type, excerpt, slug, language, tags, timeToRead, hero, cover } = props\n  const { defaultLang } = useSiteMetadata()\n\n  const heroStyle = {\n    \"margin-bottom\" : \"25px\",\n  }\n\n  return (\n    <Post>\n      <PostHeader>\n      { hero && (\n        <div style={heroStyle}>\n        <img src={hero || (cover && cover.publicURL)} />\n      </div>\n      )} \n      \n        <h2>\n          <PostTitleLink to={`/${slug}`}>\n            {/* {defaultLang !== language && <Flag language={language} />} */}\n            {title}\n          </PostTitleLink>\n        </h2>\n      </PostHeader>\n\n      <section>\n        <Excerpt dangerouslySetInnerHTML={{ __html: excerpt }} />\n      </section>\n\n      <footer>\n        <FooterLine>\n          <ReadingTime min={timeToRead} />\n          <Bull />\n          <TagList tags={tags} />\n        </FooterLine>\n        <ReadPost to={`/${slug}`} aria-label={`View ${title} article`}>\n          Read post â€º\n        </ReadPost>\n      </footer>\n    </Post>\n  )\n}\nexport default PostsListItem\n","import React, { Fragment } from 'react'\n\nimport PostsListItem from './PostsListItem'\nimport useSiteMetadata from '../hooks/use-site-config'\n\nconst PostsList = ({ posts }) => {\n  const { defaultLang } = useSiteMetadata()\n\n  return (\n    <Fragment>\n      {posts.map(post => {\n        const props = {\n          title: post.node.frontmatter.title,\n          type: post.node.frontmatter.type,\n          excerpt: post.node.excerpt,\n          slug: post.node.frontmatter.slug,\n          timeToRead: post.node.timeToRead,\n          language: post.node.frontmatter.language || defaultLang,\n          tags: post.node.frontmatter.tags || [],\n          hero: post.node.frontmatter.hero,\n          cover: post.node.frontmatter.cover,\n        }\n        return <PostsListItem key={props.slug} {...props} />\n      })}\n    </Fragment>\n  )\n}\nexport default PostsList\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst PaginationWrapper = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  margin-top: 4em;\n  justify-content: space-between;\n  width: 80%;\n  max-width: 770px;\n  padding: 25px 0;\n  margin: 0px auto;\n\n  @media (max-width: 780px) {\n    width: 90%;\n    padding: 25px 0;\n  }\n`\n\nconst PageBtn = styled(Link)`\n  border-radius: 3px;\n  background-color: var(--color-primary);\n  border: 1px solid var(--color-primary);\n  color: var(--color-white);\n  padding: 8px 20px;\n  min-width: 130px;\n\n  &:hover {\n    background-color: var(--color-white);\n    color: var(--color-primary);\n    border: 1px solid var(--color-primary);\n  }\n\n  @media (max-width: 564px) {\n    margin-top: 10px;\n    width: 100%;\n  }\n`\n\nconst PreviousBtn = styled(PageBtn)`\n  order: 1;\n  @media (max-width: 564px) {\n    order: 2;\n  }\n`\n\nconst NextBtn = styled(PageBtn)`\n  order: 3;\n`\n\nconst Spacer = styled.span`\n  display: block;\n  min-width: 130px;\n\n  &.previous {\n    order: 1;\n  }\n\n  &.next {\n    order: 3;\n  }\n\n  @media (max-width: 564px) {\n    display: none;\n\n    &.previous {\n      order: 2;\n    }\n\n    &.next {\n      order: 3;\n    }\n  }\n`\n\nconst PageInfo = styled.span`\n  order: 2;\n  padding: 1em 0;\n  @media (max-width: 564px) {\n    order: 1;\n  }\n`\n\nclass Pagination extends React.Component {\n  render() {\n    const { currentPage, nbPages } = this.props\n    const previousUrl = currentPage === 2 ? '/' : `/pages/${currentPage - 1}`\n\n    return (\n      <PaginationWrapper>\n        {currentPage !== 1 ? (\n          <PreviousBtn to={previousUrl}>â€¹ Newer posts</PreviousBtn>\n        ) : (\n          <Spacer className=\"previous\" />\n        )}\n\n        <PageInfo>\n          Page {currentPage} of {nbPages}\n        </PageInfo>\n\n        {currentPage < nbPages ? (\n          <NextBtn to={`/pages/${currentPage + 1}`}>Older posts â€º</NextBtn>\n        ) : (\n          <Spacer className=\"next\" />\n        )}\n      </PaginationWrapper>\n    )\n  }\n}\n\nexport default Pagination\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Wrapper from '../components/Wrapper'\nimport PostsList from '../components/PostsList'\nimport Pagination from '../components/Pagination'\nimport SEO from '../components/SEO'\nimport styled from 'styled-components'\n\nexport const PageTitle = styled.h2`\n`\nexport const PageTitleHr = styled.hr`\n  margin: 20px 0 10px 0;\n`\n\nclass BlogList extends React.Component {\n  render() {\n    const posts = this.props.data.posts.edges\n    const { pageContext } = this.props\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO />\n        {/* <HeroMain title={title} subTitle={description} /> */}\n        <Wrapper>\n          <PageTitle>All Posts</PageTitle>\n          <PageTitleHr/>\n          <PostsList posts={posts} />\n        </Wrapper>\n\n        <Pagination\n          nbPages={pageContext.nbPages}\n          currentPage={pageContext.currentPage}\n        />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogList\n\nexport const pageQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    posts: allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fileAbsolutePath: {regex: \"/content/posts/|/content/til/\"}\n        frontmatter: { published: { ne: false }, unlisted: { ne: true } }\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            type\n            tags\n            language\n            slug\n            hero\n            cover {\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}