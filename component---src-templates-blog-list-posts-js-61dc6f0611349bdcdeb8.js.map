{"version":3,"sources":["webpack:///./src/components/PaginationPosts.js","webpack:///./src/templates/blog-list-posts.js","webpack:///./src/components/TagList.js","webpack:///./src/components/PostsListItem.js","webpack:///./src/components/PostsList.js","webpack:///./src/components/Pagination.js","webpack:///./src/templates/blog-list-template.js"],"names":["PaginationWrapper","styled","nav","withConfig","displayName","componentId","PageBtn","Link","PreviousBtn","NextBtn","Spacer","span","PageInfo","PaginationPosts","_React$Component","apply","arguments","_inheritsLoose","prototype","render","_this$props","this","props","currentPage","nbPages","previousUrl","React","createElement","to","className","Component","BlogListPosts","posts","data","edges","pageContext","Layout","location","SEO","Wrapper","PageTitle","PageTitleHr","PostsList","ListContainer","div","TagListItemLink","TagListItem","TagList","tags","noLink","map","tag","i","Fragment","key","length","Post","article","ReadPost","PostHeader","header","Excerpt","p","PostTitleLink","FooterLine","PostsListItem","title","excerpt","type","slug","language","timeToRead","hero","cover","useSiteMetadata","defaultLang","style","src","publicURL","dangerouslySetInnerHTML","__html","ReadingTime","min","Bull","aria-label","_ref","post","node","frontmatter","Object","assign","Pagination","h2","hr","BlogList"],"mappings":"iNAIMA,EAAoBC,IAAOC,IAAGC,WAAA,CAAAC,YAAA,qCAAAC,YAAA,eAAVJ,CAAU,qOAkB9BK,EAAUL,YAAOM,QAAKJ,WAAA,CAAAC,YAAA,2BAAAC,YAAA,eAAZJ,CAAY,iUAoBtBO,EAAcP,YAAOK,GAAQH,WAAA,CAAAC,YAAA,+BAAAC,YAAA,eAAfJ,CAAe,gDAO7BQ,EAAUR,YAAOK,GAAQH,WAAA,CAAAC,YAAA,2BAAAC,YAAA,eAAfJ,CAAe,cAIzBS,EAAST,IAAOU,KAAIR,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAXJ,CAAW,mJAyBpBW,EAAWX,IAAOU,KAAIR,WAAA,CAAAC,YAAA,4BAAAC,YAAA,eAAXJ,CAAW,8DAmCbY,EA3BM,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAwBlB,OAxBkBC,YAAAJ,EAAAC,GAAAD,EAAAK,UACnBC,OAAA,WACE,IAAAC,EAAiCC,KAAKC,MAA9BC,EAAWH,EAAXG,YAAaC,EAAOJ,EAAPI,QACfC,EAA8B,IAAhBF,EAAoB,SAAQ,gBAAkBA,EAAc,GAEhF,OACEG,IAAAC,cAAC3B,EAAiB,KACC,IAAhBuB,EACCG,IAAAC,cAACnB,EAAW,CAACoB,GAAIH,GAAa,iBAE9BC,IAAAC,cAACjB,EAAM,CAACmB,UAAU,aAGpBH,IAAAC,cAACf,EAAQ,KAAC,QACFW,EAAY,OAAKC,GAGxBD,EAAcC,EACbE,IAAAC,cAAClB,EAAO,CAACmB,GAAE,gBAAiBL,EAAc,IAAK,iBAE/CG,IAAAC,cAACjB,EAAM,CAACmB,UAAU,WAIzBhB,EAxBkB,CAASa,IAAMI,W,YC5E9BC,EAAa,SAAAjB,GAAA,SAAAiB,IAAA,OAAAjB,EAAAC,MAAA,KAAAC,YAAA,KAoBhB,OApBgBC,YAAAc,EAAAjB,GAAAiB,EAAAb,UACjBC,OAAA,WACE,IAAMa,EAAQX,KAAKC,MAAMW,KAAKD,MAAME,MAC5BC,EAAgBd,KAAKC,MAArBa,YAER,OACET,IAAAC,cAACS,IAAM,CAACC,SAAUhB,KAAKC,MAAMe,UAC3BX,IAAAC,cAACW,IAAG,MACJZ,IAAAC,cAACY,IAAO,KACJb,IAAAC,cAACa,YAAS,KAAC,QACXd,IAAAC,cAACc,cAAW,MACdf,IAAAC,cAACe,IAAS,CAACV,MAAOA,KAGpBN,IAAAC,cAACd,EAAe,CACdW,QAASW,EAAYX,QACrBD,YAAaY,EAAYZ,gBAIhCQ,EApBgB,CAASL,IAAMI,WAuBnBC,a,+FC7BTY,EAAgB1C,IAAO2C,IAAGzC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAVJ,CAAU,sDAK1B4C,EAAkB5C,YAAOM,QAAKJ,WAAA,CAAAC,YAAA,2BAAAC,YAAA,eAAZJ,CAAY,2LAgB9B6C,EAAc7C,IAAOU,KAAIR,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAXJ,CAAW,8HAWzB8C,EAAO,SAAAjC,GAAA,SAAAiC,IAAA,OAAAjC,EAAAC,MAAA,KAAAC,YAAA,KAmBV,OAnBUC,YAAA8B,EAAAjC,GAAAiC,EAAA7B,UACXC,OAAA,WACE,IAAAC,EAAyBC,KAAKC,MAAtB0B,EAAI5B,EAAJ4B,KAAMC,EAAM7B,EAAN6B,OAEd,OACEvB,IAAAC,cAACgB,EAAa,KACXK,EAAKE,KAAI,SAACC,EAAKC,GACd,OACE1B,IAAAC,cAAC0B,WAAQ,CAACC,IAAG,YAAcF,IACvBH,GACAvB,IAAAC,cAACkB,EAAe,CAACjB,GAAE,SAAWuB,GAAQA,GAEvCF,GAAUvB,IAAAC,cAACmB,EAAW,CAAClB,GAAE,SAAWuB,GAAQA,GAC5CC,EAAIJ,EAAKO,OAAS,EAAI,KAAO,SAMzCR,EAnBU,CAASrB,IAAMI,WAsBbiB,O,yHCnDTS,EAAOvD,IAAOwD,QAAOtD,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAAdJ,CAAc,gGAMrByD,EAAWzD,YAAOM,QAAKJ,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAZJ,CAAY,gRAkBvB0D,EAAa1D,IAAO2D,OAAMzD,WAAA,CAAAC,YAAA,4BAAAC,YAAA,eAAbJ,CAAa,oBAI1B4D,EAAU5D,IAAO6D,EAAC3D,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAARJ,CAAQ,2DAMlB8D,EAAgB9D,YAAOM,QAAKJ,WAAA,CAAAC,YAAA,+BAAAC,YAAA,eAAZJ,CAAY,gFAO5B+D,EAAa/D,IAAO2C,IAAGzC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,eAAVJ,CAAU,sBA8CdgE,EA1CO,SAAA3C,GACpB,IAAQ4C,EAAwE5C,EAAxE4C,MAAaC,GAA2D7C,EAAjE8C,KAAiE9C,EAA3D6C,SAASE,EAAkD/C,EAAlD+C,KAAgBrB,GAAkC1B,EAA5CgD,SAA4ChD,EAAlC0B,MAAMuB,EAA4BjD,EAA5BiD,WAAYC,EAAgBlD,EAAhBkD,KAAMC,EAAUnD,EAAVmD,MAC9CC,cAAhBC,YAMR,OACEjD,IAAAC,cAAC6B,EAAI,KACH9B,IAAAC,cAACgC,EAAU,KACTa,GACA9C,IAAAC,cAAA,OAAKiD,MARO,CAChB,gBAAkB,SAQdlD,IAAAC,cAAA,OAAKkD,IAAKL,GAASC,GAASA,EAAMK,aAIlCpD,IAAAC,cAAA,UACED,IAAAC,cAACoC,EAAa,CAACnC,GAAE,IAAMyC,GAEpBH,KAKPxC,IAAAC,cAAA,eACED,IAAAC,cAACkC,EAAO,CAACkB,wBAAyB,CAAEC,OAAQb,MAG9CzC,IAAAC,cAAA,cACED,IAAAC,cAACqC,EAAU,KACTtC,IAAAC,cAACsD,IAAW,CAACC,IAAKX,IAClB7C,IAAAC,cAACwD,IAAI,MACLzD,IAAAC,cAACoB,IAAO,CAACC,KAAMA,KAEjBtB,IAAAC,cAAC+B,EAAQ,CAAC9B,GAAE,IAAMyC,EAAQe,aAAA,QAAoBlB,EAAK,YAAY,kBC5DxDxB,IAtBG,SAAH2C,GAAmB,IAAbrD,EAAKqD,EAALrD,MACX2C,EAAgBD,cAAhBC,YAER,OACEjD,IAAAC,cAAC0B,WAAQ,KACNrB,EAAMkB,KAAI,SAAAoC,GACT,IAAMhE,EAAQ,CACZ4C,MAAOoB,EAAKC,KAAKC,YAAYtB,MAC7BE,KAAMkB,EAAKC,KAAKC,YAAYpB,KAC5BD,QAASmB,EAAKC,KAAKpB,QACnBE,KAAMiB,EAAKC,KAAKC,YAAYnB,KAC5BE,WAAYe,EAAKC,KAAKhB,WACtBD,SAAUgB,EAAKC,KAAKC,YAAYlB,UAAYK,EAC5C3B,KAAMsC,EAAKC,KAAKC,YAAYxC,MAAQ,GACpCwB,KAAMc,EAAKC,KAAKC,YAAYhB,KAC5BC,MAAOa,EAAKC,KAAKC,YAAYf,OAE/B,OAAO/C,IAAAC,cAACsC,EAAawB,OAAAC,OAAA,CAACpC,IAAKhC,EAAM+C,MAAU/C,U,kOClB7CtB,EAAoBC,IAAOC,IAAGC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAVJ,CAAU,qOAkB9BK,EAAUL,YAAOM,QAAKJ,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAZJ,CAAY,iUAoBtBO,EAAcP,YAAOK,GAAQH,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAfJ,CAAe,gDAO7BQ,EAAUR,YAAOK,GAAQH,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAfJ,CAAe,cAIzBS,EAAST,IAAOU,KAAIR,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAXJ,CAAW,mJAyBpBW,EAAWX,IAAOU,KAAIR,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAXJ,CAAW,8DAmCb0F,EA3BC,SAAA7E,GAAA,SAAA6E,IAAA,OAAA7E,EAAAC,MAAA,KAAAC,YAAA,KAwBb,OAxBaC,YAAA0E,EAAA7E,GAAA6E,EAAAzE,UACdC,OAAA,WACE,IAAAC,EAAiCC,KAAKC,MAA9BC,EAAWH,EAAXG,YAAaC,EAAOJ,EAAPI,QACfC,EAA8B,IAAhBF,EAAoB,IAAG,WAAaA,EAAc,GAEtE,OACEG,IAAAC,cAAC3B,EAAiB,KACC,IAAhBuB,EACCG,IAAAC,cAACnB,EAAW,CAACoB,GAAIH,GAAa,iBAE9BC,IAAAC,cAACjB,EAAM,CAACmB,UAAU,aAGpBH,IAAAC,cAACf,EAAQ,KAAC,QACFW,EAAY,OAAKC,GAGxBD,EAAcC,EACbE,IAAAC,cAAClB,EAAO,CAACmB,GAAE,WAAYL,EAAc,IAAK,iBAE1CG,IAAAC,cAACjB,EAAM,CAACmB,UAAU,WAIzB8D,EAxBa,CAASjE,IAAMI,W,YC5ElBU,EAAYvC,IAAO2F,GAAEzF,WAAA,CAAAC,YAAA,gCAAAC,YAAA,eAATJ,CAAS,MAErBwC,EAAcxC,IAAO4F,GAAE1F,WAAA,CAAAC,YAAA,kCAAAC,YAAA,eAATJ,CAAS,2BAI9B6F,EAAQ,SAAAhF,GAAA,SAAAgF,IAAA,OAAAhF,EAAAC,MAAA,KAAAC,YAAA,KAqBX,OArBWC,YAAA6E,EAAAhF,GAAAgF,EAAA5E,UACZC,OAAA,WACE,IAAMa,EAAQX,KAAKC,MAAMW,KAAKD,MAAME,MAC5BC,EAAgBd,KAAKC,MAArBa,YAER,OACET,IAAAC,cAACS,IAAM,CAACC,SAAUhB,KAAKC,MAAMe,UAC3BX,IAAAC,cAACW,IAAG,MAEJZ,IAAAC,cAACY,IAAO,KACNb,IAAAC,cAACa,EAAS,KAAC,aACXd,IAAAC,cAACc,EAAW,MACZf,IAAAC,cAACe,IAAS,CAACV,MAAOA,KAGpBN,IAAAC,cAACgE,EAAU,CACTnE,QAASW,EAAYX,QACrBD,YAAaY,EAAYZ,gBAIhCuE,EArBW,CAASpE,IAAMI,WAwBdgE","file":"component---src-templates-blog-list-posts-js-61dc6f0611349bdcdeb8.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst PaginationWrapper = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  margin-top: 4em;\n  justify-content: space-between;\n  width: 80%;\n  max-width: 770px;\n  padding: 25px 0;\n  margin: 0px auto;\n\n  @media (max-width: 780px) {\n    width: 90%;\n    padding: 25px 0;\n  }\n`\n\nconst PageBtn = styled(Link)`\n  border-radius: 3px;\n  background-color: var(--color-primary);\n  border: 1px solid var(--color-primary);\n  color: var(--color-white);\n  padding: 8px 20px;\n  min-width: 130px;\n\n  &:hover {\n    background-color: var(--color-white);\n    color: var(--color-primary);\n    border: 1px solid var(--color-primary);\n  }\n\n  @media (max-width: 564px) {\n    margin-top: 10px;\n    width: 100%;\n  }\n`\n\nconst PreviousBtn = styled(PageBtn)`\n  order: 1;\n  @media (max-width: 564px) {\n    order: 2;\n  }\n`\n\nconst NextBtn = styled(PageBtn)`\n  order: 3;\n`\n\nconst Spacer = styled.span`\n  display: block;\n  min-width: 130px;\n\n  &.previous {\n    order: 1;\n  }\n\n  &.next {\n    order: 3;\n  }\n\n  @media (max-width: 564px) {\n    display: none;\n\n    &.previous {\n      order: 2;\n    }\n\n    &.next {\n      order: 3;\n    }\n  }\n`\n\nconst PageInfo = styled.span`\n  order: 2;\n  padding: 1em 0;\n  @media (max-width: 564px) {\n    order: 1;\n  }\n`\n\nclass PaginationPosts extends React.Component {\n  render() {\n    const { currentPage, nbPages } = this.props\n    const previousUrl = currentPage === 2 ? '/post/' : `/post/pages/${currentPage - 1}`\n\n    return (\n      <PaginationWrapper>\n        {currentPage !== 1 ? (\n          <PreviousBtn to={previousUrl}>‹ Newer posts</PreviousBtn>\n        ) : (\n          <Spacer className=\"previous\" />\n        )}\n\n        <PageInfo>\n          Page {currentPage} of {nbPages}\n        </PageInfo>\n\n        {currentPage < nbPages ? (\n          <NextBtn to={`/post/pages/${currentPage + 1}`}>Older posts ›</NextBtn>\n        ) : (\n          <Spacer className=\"next\" />\n        )}\n      </PaginationWrapper>\n    )\n  }\n}\n\nexport default PaginationPosts\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Wrapper from '../components/Wrapper'\nimport PostsList from '../components/PostsList'\nimport SEO from '../components/SEO'\nimport PaginationPosts from \"../components/PaginationPosts\";\nimport {PageTitle, PageTitleHr} from \"./blog-list-template\";\n\nclass BlogListPosts extends React.Component {\n  render() {\n    const posts = this.props.data.posts.edges\n    const { pageContext } = this.props\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO />\n        <Wrapper>\n            <PageTitle>Blog</PageTitle>\n            <PageTitleHr/>\n          <PostsList posts={posts} />\n        </Wrapper>\n\n        <PaginationPosts\n          nbPages={pageContext.nbPages}\n          currentPage={pageContext.currentPage}\n        />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogListPosts\n\nexport const pageQuery = graphql`\n  query BlogListPosts($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    posts: allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fileAbsolutePath: {regex: \"/content/posts/\"}\n        frontmatter: { published: { ne: false }, unlisted: { ne: true } }\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            language\n            slug\n            hero\n            cover {\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { Fragment } from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst ListContainer = styled.div`\n  display: inline;\n  color: var(--color-textSecondary);\n`\n\nconst TagListItemLink = styled(Link)`\n  text-transform: uppercase;\n  color: var(--color-textSecondary);\n\n  &:not(:first-child) {\n    margin-left: 0.3rem;\n  }\n\n  &:hover {\n    border-bottom: 1px dotted var(--color-textSecondary);\n  }\n  &:before {\n    content: '#';\n  }\n`\n\nconst TagListItem = styled.span`\n  text-transform: uppercase;\n  color: var(--color-textSecondary);\n  &:not(:first-child) {\n    margin-left: 0.3rem;\n  }\n  &:before {\n    content: '#';\n  }\n`\n\nclass TagList extends React.Component {\n  render() {\n    const { tags, noLink } = this.props\n\n    return (\n      <ListContainer>\n        {tags.map((tag, i) => {\n          return (\n            <Fragment key={`tag-list-${i}`}>\n              {!noLink && (\n                <TagListItemLink to={`/tags/${tag}`}>{tag}</TagListItemLink>\n              )}\n              {noLink && <TagListItem to={`/tags/${tag}`}>{tag}</TagListItem>}\n              {i < tags.length - 1 ? ', ' : ''}\n            </Fragment>\n          )\n        })}\n      </ListContainer>\n    )\n  }\n}\n\nexport default TagList\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport TagList from './TagList'\nimport useSiteMetadata from '../hooks/use-site-config'\nimport styled from 'styled-components'\nimport { Bull, ReadingTime } from './Commons'\n\nconst Post = styled.article`\n  border-bottom: 1px solid rgba(214, 209, 230, 0.5);\n  padding-bottom: 1.25rem;\n  margin-bottom: 1.5rem;\n`\n\nconst ReadPost = styled(Link)`\n  display: block;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  line-height: 2;\n  color: var(--color-text);\n\n  &:hover {\n    background-color: var(--color-grey600);\n    border-radius: 0.25rem;\n    color: var(--color-white);\n  }\n`\n\nconst PostHeader = styled.header`\n  padding: 1em 0;\n`\n\nconst Excerpt = styled.p`\n  line-height: 1.45;\n  padding-bottom: 0.5em;\n  color: darkgray;\n`\n\nconst PostTitleLink = styled(Link)`\n  color: var(--color-h2);\n  &:hover {\n    border-bottom: 1px dotted var(--color-text);\n  }\n`\n\nconst FooterLine = styled.div`\n  font-size: 0.8em;\n`\n\nconst PostsListItem = props => {\n  const { title, type, excerpt, slug, language, tags, timeToRead, hero, cover } = props\n  const { defaultLang } = useSiteMetadata()\n\n  const heroStyle = {\n    \"margin-bottom\" : \"25px\",\n  }\n\n  return (\n    <Post>\n      <PostHeader>\n      { hero && (\n        <div style={heroStyle}>\n        <img src={hero || (cover && cover.publicURL)} />\n      </div>\n      )} \n      \n        <h2>\n          <PostTitleLink to={`/${slug}`}>\n            {/* {defaultLang !== language && <Flag language={language} />} */}\n            {title}\n          </PostTitleLink>\n        </h2>\n      </PostHeader>\n\n      <section>\n        <Excerpt dangerouslySetInnerHTML={{ __html: excerpt }} />\n      </section>\n\n      <footer>\n        <FooterLine>\n          <ReadingTime min={timeToRead} />\n          <Bull />\n          <TagList tags={tags} />\n        </FooterLine>\n        <ReadPost to={`/${slug}`} aria-label={`View ${title} article`}>\n          Read post ›\n        </ReadPost>\n      </footer>\n    </Post>\n  )\n}\nexport default PostsListItem\n","import React, { Fragment } from 'react'\n\nimport PostsListItem from './PostsListItem'\nimport useSiteMetadata from '../hooks/use-site-config'\n\nconst PostsList = ({ posts }) => {\n  const { defaultLang } = useSiteMetadata()\n\n  return (\n    <Fragment>\n      {posts.map(post => {\n        const props = {\n          title: post.node.frontmatter.title,\n          type: post.node.frontmatter.type,\n          excerpt: post.node.excerpt,\n          slug: post.node.frontmatter.slug,\n          timeToRead: post.node.timeToRead,\n          language: post.node.frontmatter.language || defaultLang,\n          tags: post.node.frontmatter.tags || [],\n          hero: post.node.frontmatter.hero,\n          cover: post.node.frontmatter.cover,\n        }\n        return <PostsListItem key={props.slug} {...props} />\n      })}\n    </Fragment>\n  )\n}\nexport default PostsList\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst PaginationWrapper = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  margin-top: 4em;\n  justify-content: space-between;\n  width: 80%;\n  max-width: 770px;\n  padding: 25px 0;\n  margin: 0px auto;\n\n  @media (max-width: 780px) {\n    width: 90%;\n    padding: 25px 0;\n  }\n`\n\nconst PageBtn = styled(Link)`\n  border-radius: 3px;\n  background-color: var(--color-primary);\n  border: 1px solid var(--color-primary);\n  color: var(--color-white);\n  padding: 8px 20px;\n  min-width: 130px;\n\n  &:hover {\n    background-color: var(--color-white);\n    color: var(--color-primary);\n    border: 1px solid var(--color-primary);\n  }\n\n  @media (max-width: 564px) {\n    margin-top: 10px;\n    width: 100%;\n  }\n`\n\nconst PreviousBtn = styled(PageBtn)`\n  order: 1;\n  @media (max-width: 564px) {\n    order: 2;\n  }\n`\n\nconst NextBtn = styled(PageBtn)`\n  order: 3;\n`\n\nconst Spacer = styled.span`\n  display: block;\n  min-width: 130px;\n\n  &.previous {\n    order: 1;\n  }\n\n  &.next {\n    order: 3;\n  }\n\n  @media (max-width: 564px) {\n    display: none;\n\n    &.previous {\n      order: 2;\n    }\n\n    &.next {\n      order: 3;\n    }\n  }\n`\n\nconst PageInfo = styled.span`\n  order: 2;\n  padding: 1em 0;\n  @media (max-width: 564px) {\n    order: 1;\n  }\n`\n\nclass Pagination extends React.Component {\n  render() {\n    const { currentPage, nbPages } = this.props\n    const previousUrl = currentPage === 2 ? '/' : `/pages/${currentPage - 1}`\n\n    return (\n      <PaginationWrapper>\n        {currentPage !== 1 ? (\n          <PreviousBtn to={previousUrl}>‹ Newer posts</PreviousBtn>\n        ) : (\n          <Spacer className=\"previous\" />\n        )}\n\n        <PageInfo>\n          Page {currentPage} of {nbPages}\n        </PageInfo>\n\n        {currentPage < nbPages ? (\n          <NextBtn to={`/pages/${currentPage + 1}`}>Older posts ›</NextBtn>\n        ) : (\n          <Spacer className=\"next\" />\n        )}\n      </PaginationWrapper>\n    )\n  }\n}\n\nexport default Pagination\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Wrapper from '../components/Wrapper'\nimport PostsList from '../components/PostsList'\nimport Pagination from '../components/Pagination'\nimport SEO from '../components/SEO'\nimport styled from 'styled-components'\n\nexport const PageTitle = styled.h2`\n`\nexport const PageTitleHr = styled.hr`\n  margin: 20px 0 10px 0;\n`\n\nclass BlogList extends React.Component {\n  render() {\n    const posts = this.props.data.posts.edges\n    const { pageContext } = this.props\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO />\n        {/* <HeroMain title={title} subTitle={description} /> */}\n        <Wrapper>\n          <PageTitle>All Posts</PageTitle>\n          <PageTitleHr/>\n          <PostsList posts={posts} />\n        </Wrapper>\n\n        <Pagination\n          nbPages={pageContext.nbPages}\n          currentPage={pageContext.currentPage}\n        />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogList\n\nexport const pageQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    posts: allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fileAbsolutePath: {regex: \"/content/posts/|/content/til/\"}\n        frontmatter: { published: { ne: false }, unlisted: { ne: true } }\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            type\n            tags\n            language\n            slug\n            hero\n            cover {\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}